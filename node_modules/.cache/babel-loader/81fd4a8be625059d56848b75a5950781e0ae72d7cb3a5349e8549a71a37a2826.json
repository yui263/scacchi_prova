{"ast":null,"code":"var _jsxFileName = \"/Users/alessiobove/Desktop/javascript_projects/The_Final_Project/chess_website/chess/src/pages/OpeningPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ChessBoard from \"../components/ChessBoard\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { cleanPNGMoves } from \"../utils/cleanPNGMoves\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OpeningPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const opening = useSelector(state => state.openings.list.find(o => o.id === parseInt(id)));\n  const [cleanedMoves, setCleanedMoves] = useState('');\n  useEffect(() => {\n    // 1. Definisci la stringa grezza con le mosse\n    const rawMoves = opening.moves;\n\n    // 2. ✅ CORREZIONE: Chiama la tua funzione di pulizia e passale la stringa grezza.\n    //    La funzione restituirà la stringa già pulita e pronta.\n    const finalString = cleanPNGMoves(rawMoves);\n\n    // 3. Salva la stringa finale, pulita e corretta, nello stato.\n    setCleanedMoves(finalString);\n  }, [opening]);\n  if (!opening) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Apertura non trovata\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"La mia apertura\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), cleanedMoves ? /*#__PURE__*/_jsxDEV(ChessBoard, {\n      moves: cleanedMoves\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Caricamento della scacchiera...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(OpeningPage, \"6GuiZbnVcN+sa4NwZRro/+AKahk=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = OpeningPage;\nexport default OpeningPage;\nvar _c;\n$RefreshReg$(_c, \"OpeningPage\");","map":{"version":3,"names":["React","ChessBoard","useState","useEffect","useParams","useSelector","cleanPNGMoves","jsxDEV","_jsxDEV","OpeningPage","_s","id","opening","state","openings","list","find","o","parseInt","cleanedMoves","setCleanedMoves","rawMoves","moves","finalString","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alessiobove/Desktop/javascript_projects/The_Final_Project/chess_website/chess/src/pages/OpeningPage.js"],"sourcesContent":["import React from \"react\";\nimport ChessBoard from \"../components/ChessBoard\"; \nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { cleanPNGMoves } from \"../utils/cleanPNGMoves\";   \n\n\nfunction OpeningPage() {\n  const { id } = useParams();\n  const opening = useSelector((state) =>\n    state.openings.list.find((o) => o.id === parseInt(id))\n  );  \n  \n  const [cleanedMoves, setCleanedMoves] = useState('');\n\n  useEffect(() => {\n    // 1. Definisci la stringa grezza con le mosse\n    const rawMoves = opening.moves; \n\n    // 2. ✅ CORREZIONE: Chiama la tua funzione di pulizia e passale la stringa grezza.\n    //    La funzione restituirà la stringa già pulita e pronta.\n    const finalString = cleanPNGMoves(rawMoves);\n\n    // 3. Salva la stringa finale, pulita e corretta, nello stato.\n    setCleanedMoves(finalString);\n  }, [opening]); \n  \n  \n  \n\n\n\n \n  \n\n  if (!opening) return <div>Apertura non trovata</div>;\n\n \n\n  return (\n    <div>\n      <h1>La mia apertura</h1>\n      \n      {/* Mostra il componente ChessBoard solo se cleanedMoves non è vuoto */}\n      {cleanedMoves ? (\n        <ChessBoard moves={cleanedMoves} />\n      ) : (\n        <p>Caricamento della scacchiera...</p> \n      )}\n    </div>\n  );\n}\n\nexport default OpeningPage; \n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,OAAO,GAAGP,WAAW,CAAEQ,KAAK,IAChCA,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACN,EAAE,KAAKO,QAAQ,CAACP,EAAE,CAAC,CACvD,CAAC;EAED,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMkB,QAAQ,GAAGT,OAAO,CAACU,KAAK;;IAE9B;IACA;IACA,MAAMC,WAAW,GAAGjB,aAAa,CAACe,QAAQ,CAAC;;IAE3C;IACAD,eAAe,CAACG,WAAW,CAAC;EAC9B,CAAC,EAAE,CAACX,OAAO,CAAC,CAAC;EAUb,IAAI,CAACA,OAAO,EAAE,oBAAOJ,OAAA;IAAAgB,QAAA,EAAK;EAAoB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAIpD,oBACEpB,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGvBT,YAAY,gBACXX,OAAA,CAACP,UAAU;MAACqB,KAAK,EAAEH;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEnCpB,OAAA;MAAAgB,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CA5CQD,WAAW;EAAA,QACHL,SAAS,EACRC,WAAW;AAAA;AAAAwB,EAAA,GAFpBpB,WAAW;AA8CpB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}