{"ast":null,"code":"var _jsxFileName = \"/Users/alessiobove/Desktop/javascript_projects/The_Final_Project/chess_website/chess/src/components/ChessBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = ({\n  moves\n}) => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(\"start\");\n  useEffect(() => {\n    const gameInstance = new Chess();\n    const moveList = moves.split(\" \").filter(Boolean);\n    let index = 0;\n    const animateMoves = () => {\n      if (index >= moveList.length) return;\n      const move = moveList[index];\n      const result = gameInstance.move(move);\n      if (result) {\n        setFen(gameInstance.fen());\n        index++;\n\n        // Mostra una mossa ogni 800ms\n        setTimeout(animateMoves, 800);\n      } else {\n        console.error(\"Mossa non valida durante animazione:\", move);\n      }\n    };\n\n    // Avvia animazione all'avvio\n    setFen(\"start\");\n    setGame(new Chess());\n    setTimeout(animateMoves, 500);\n  }, [moves]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"400px\",\n      margin: \"2rem auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: fen,\n      boardWidth: 400,\n      arePiecesDraggable: false,\n      animationDuration: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBoard, \"7Fhc+EpkNJobBIXYhHaQaKmkX38=\");\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useEffect","useState","Chess","Chessboard","jsxDEV","_jsxDEV","ChessBoard","moves","_s","game","setGame","fen","setFen","gameInstance","moveList","split","filter","Boolean","index","animateMoves","length","move","result","setTimeout","console","error","style","maxWidth","margin","children","position","boardWidth","arePiecesDraggable","animationDuration","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alessiobove/Desktop/javascript_projects/The_Final_Project/chess_website/chess/src/components/ChessBoard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\n\nconst ChessBoard = ({ moves }) => {\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(\"start\");\n\n  useEffect(() => {\n    const gameInstance = new Chess();\n    const moveList = moves.split(\" \").filter(Boolean);\n\n    let index = 0;\n\n    const animateMoves = () => {\n      if (index >= moveList.length) return;\n\n      const move = moveList[index];\n      const result = gameInstance.move(move);\n\n      if (result) {\n        setFen(gameInstance.fen());\n        index++;\n\n        // Mostra una mossa ogni 800ms\n        setTimeout(animateMoves, 800);\n      } else {\n        console.error(\"Mossa non valida durante animazione:\", move);\n      }\n    };\n\n    // Avvia animazione all'avvio\n    setFen(\"start\");\n    setGame(new Chess());\n    setTimeout(animateMoves, 500);\n  }, [moves]);\n\n  return (\n    <div style={{ maxWidth: \"400px\", margin: \"2rem auto\" }}>\n      <Chessboard\n        position={fen}\n        boardWidth={400}\n        arePiecesDraggable={false}\n        animationDuration={300}\n      />\n    </div>\n  );\n};\n\nexport default ChessBoard;\n\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,UAAU;AAChC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAIC,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,IAAIX,KAAK,CAAC,CAAC;IAChC,MAAMY,QAAQ,GAAGP,KAAK,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;IAEjD,IAAIC,KAAK,GAAG,CAAC;IAEb,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAID,KAAK,IAAIJ,QAAQ,CAACM,MAAM,EAAE;MAE9B,MAAMC,IAAI,GAAGP,QAAQ,CAACI,KAAK,CAAC;MAC5B,MAAMI,MAAM,GAAGT,YAAY,CAACQ,IAAI,CAACA,IAAI,CAAC;MAEtC,IAAIC,MAAM,EAAE;QACVV,MAAM,CAACC,YAAY,CAACF,GAAG,CAAC,CAAC,CAAC;QAC1BO,KAAK,EAAE;;QAEP;QACAK,UAAU,CAACJ,YAAY,EAAE,GAAG,CAAC;MAC/B,CAAC,MAAM;QACLK,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEJ,IAAI,CAAC;MAC7D;IACF,CAAC;;IAED;IACAT,MAAM,CAAC,OAAO,CAAC;IACfF,OAAO,CAAC,IAAIR,KAAK,CAAC,CAAC,CAAC;IACpBqB,UAAU,CAACJ,YAAY,EAAE,GAAG,CAAC;EAC/B,CAAC,EAAE,CAACZ,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IAAKqB,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAY,CAAE;IAAAC,QAAA,eACrDxB,OAAA,CAACF,UAAU;MACT2B,QAAQ,EAAEnB,GAAI;MACdoB,UAAU,EAAE,GAAI;MAChBC,kBAAkB,EAAE,KAAM;MAC1BC,iBAAiB,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA3CIF,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}