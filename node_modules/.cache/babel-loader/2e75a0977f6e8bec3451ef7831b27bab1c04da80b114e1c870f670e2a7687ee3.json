{"ast":null,"code":"var _jsxFileName = \"/Users/alessiobove/Desktop/javascript_projects/The_Final_Project/chess_website/chess/src/components/ChessBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = ({\n  moves\n}) => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(\"start\");\n  const [isPlaying, setIsPlaying] = useState(false);\n  const gameRef = useRef(null);\n  const timeoutRef = useRef(null);\n\n  // Funzione per avviare l'animazione\n  const playMoves = () => {\n    if (!moves) return;\n    const moveList = moves.split(\" \").filter(Boolean);\n    const newGame = new Chess();\n    gameRef.current = newGame;\n    setFen(\"start\");\n    setIsPlaying(true);\n    setGame(newGame);\n    let index = 0;\n    const animateMoves = () => {\n      if (index >= moveList.length) {\n        setIsPlaying(false);\n        return;\n      }\n      const move = moveList[index];\n      const result = newGame.move(move);\n      if (result) {\n        setFen(newGame.fen());\n        index++;\n        timeoutRef.current = setTimeout(animateMoves, 800);\n      } else {\n        console.error(\"❌ Mossa non valida:\", move);\n        setIsPlaying(false);\n      }\n    };\n    animateMoves();\n  };\n\n  // Cleanup se il componente viene smontato\n  useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"420px\",\n      margin: \"2rem auto\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      position: fen,\n      boardWidth: 400,\n      arePiecesDraggable: false,\n      animationDuration: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playMoves,\n      disabled: isPlaying,\n      style: {\n        marginTop: \"1rem\",\n        padding: \"0.5rem 1rem\",\n        fontSize: \"1rem\",\n        backgroundColor: \"#3b82f6\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"0.5rem\",\n        cursor: isPlaying ? \"not-allowed\" : \"pointer\",\n        opacity: isPlaying ? 0.6 : 1\n      },\n      children: \"\\u25B6\\uFE0F Ripeti Apertura\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBoard, \"8gqbQ0sYBmDE38WRA2Nv6zMeV04=\");\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chess","Chessboard","jsxDEV","_jsxDEV","ChessBoard","moves","_s","game","setGame","fen","setFen","isPlaying","setIsPlaying","gameRef","timeoutRef","playMoves","moveList","split","filter","Boolean","newGame","current","index","animateMoves","length","move","result","setTimeout","console","error","clearTimeout","style","maxWidth","margin","textAlign","children","position","boardWidth","arePiecesDraggable","animationDuration","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","marginTop","padding","fontSize","backgroundColor","color","border","borderRadius","cursor","opacity","_c","$RefreshReg$"],"sources":["/Users/alessiobove/Desktop/javascript_projects/The_Final_Project/chess_website/chess/src/components/ChessBoard.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\n\nconst ChessBoard = ({ moves }) => {\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(\"start\");\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const gameRef = useRef(null);\n  const timeoutRef = useRef(null);\n\n  // Funzione per avviare l'animazione\n  const playMoves = () => {\n    if (!moves) return;\n\n    const moveList = moves.split(\" \").filter(Boolean);\n    const newGame = new Chess();\n    gameRef.current = newGame;\n\n    setFen(\"start\");\n    setIsPlaying(true);\n    setGame(newGame);\n\n    let index = 0;\n\n    const animateMoves = () => {\n      if (index >= moveList.length) {\n        setIsPlaying(false);\n        return;\n      }\n\n      const move = moveList[index];\n      const result = newGame.move(move);\n\n      if (result) {\n        setFen(newGame.fen());\n        index++;\n        timeoutRef.current = setTimeout(animateMoves, 800);\n      } else {\n        console.error(\"❌ Mossa non valida:\", move);\n        setIsPlaying(false);\n      }\n    };\n\n    animateMoves();\n  };\n\n  // Cleanup se il componente viene smontato\n  useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n\n  return (\n    <div style={{ maxWidth: \"420px\", margin: \"2rem auto\", textAlign: \"center\" }}>\n      <Chessboard\n        position={fen}\n        boardWidth={400}\n        arePiecesDraggable={false}\n        animationDuration={300}\n      />\n      <button\n        onClick={playMoves}\n        disabled={isPlaying}\n        style={{\n          marginTop: \"1rem\",\n          padding: \"0.5rem 1rem\",\n          fontSize: \"1rem\",\n          backgroundColor: \"#3b82f6\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"0.5rem\",\n          cursor: isPlaying ? \"not-allowed\" : \"pointer\",\n          opacity: isPlaying ? 0.6 : 1,\n        }}\n      >\n        ▶️ Ripeti Apertura\n      </button>\n    </div>\n  );\n};\n\nexport default ChessBoard;\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}