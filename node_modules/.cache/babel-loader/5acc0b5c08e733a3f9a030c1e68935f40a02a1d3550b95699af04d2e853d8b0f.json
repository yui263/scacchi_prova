{"ast":null,"code":"var _jsxFileName = \"/Users/alessiobove/Desktop/javascript_projects/The_Final_Project/chess_website/chess/src/components/ChessBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = ({\n  moves\n}) => {\n  _s();\n  const [currentPosition, setCurrentPosition] = useState(\"start\");\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Usiamo un solo riferimento per l'istanza di chess.js\n  const gameRef = useRef(new Chess());\n  const timeoutRef = useRef(null);\n\n  // Funzione per gestire i movimenti manuali dei pezzi\n  const onPieceDrop = (sourceSquare, targetSquare) => {\n    // Crea una copia \"fresca\" dello stato del gioco per evitare bug\n    const game = new Chess(currentPosition);\n    try {\n      const move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\" // Gestisce la promozione (sempre a regina in questo caso)\n      });\n\n      // Se la mossa non √® valida, chess.js lancia un errore o ritorna null\n      if (move === null) {\n        return false; // Comunica a react-chessboard che la mossa √® illegale\n      }\n\n      // Aggiorna lo stato con la nuova posizione FEN\n      setCurrentPosition(game.fen());\n      gameRef.current = game; // Aggiorna il riferimento principale del gioco\n\n      return true; // Comunica che la mossa √® andata a buon fine\n    } catch (error) {\n      console.warn(\"Mossa non valida:\", error);\n      return false;\n    }\n  };\n  const playOpening = () => {\n    console.log(\"üîÅ Inizio animazione apertura\");\n    const moveList = moves.split(\" \").filter(Boolean);\n    const game = new Chess();\n    gameRef.current = game;\n    let i = 0;\n    setCurrentPosition(\"start\");\n    setIsPlaying(true);\n    const playNext = () => {\n      if (i >= moveList.length) {\n        setIsPlaying(false);\n        console.log(\"‚úÖ Animazione terminata\");\n        return;\n      }\n      const moveResult = game.move(moveList[i]);\n      if (moveResult) {\n        setCurrentPosition(game.fen());\n        i++;\n        timeoutRef.current = setTimeout(playNext, 800);\n      } else {\n        console.error(\"‚ùå Mossa non valida nella sequenza:\", moveList[i]);\n        setIsPlaying(false);\n      }\n    };\n    timeoutRef.current = setTimeout(playNext, 500);\n  };\n  useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      boardWidth: 400,\n      animationDuration: 300,\n      arePiecesDraggable: true // Ora puoi impostarlo a true\n      ,\n      position: currentPosition,\n      onPieceDrop: onPieceDrop // <-- LA PARTE FONDAMENTALE MANCANTE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: playOpening,\n      disabled: isPlaying,\n      style: {\n        marginTop: \"1rem\",\n        padding: \"0.5rem 1rem\",\n        fontSize: \"1rem\",\n        backgroundColor: \"#2563eb\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"8px\",\n        cursor: isPlaying ? \"not-allowed\" : \"pointer\",\n        opacity: isPlaying ? 0.6 : 1\n      },\n      children: \"\\u25B6\\uFE0F Ripeti Apertura\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBoard, \"xXoDaBE8AfoWQ7OLQ/1NhqoctoY=\");\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chess","Chessboard","jsxDEV","_jsxDEV","ChessBoard","moves","_s","currentPosition","setCurrentPosition","isPlaying","setIsPlaying","gameRef","timeoutRef","onPieceDrop","sourceSquare","targetSquare","game","move","from","to","promotion","fen","current","error","console","warn","playOpening","log","moveList","split","filter","Boolean","i","playNext","length","moveResult","setTimeout","clearTimeout","style","textAlign","marginTop","children","boardWidth","animationDuration","arePiecesDraggable","position","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","padding","fontSize","backgroundColor","color","border","borderRadius","cursor","opacity","_c","$RefreshReg$"],"sources":["/Users/alessiobove/Desktop/javascript_projects/The_Final_Project/chess_website/chess/src/components/ChessBoard.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\n\nconst ChessBoard = ({ moves }) => {\n  const [currentPosition, setCurrentPosition] = useState(\"start\");\n  const [isPlaying, setIsPlaying] = useState(false);\n  \n  // Usiamo un solo riferimento per l'istanza di chess.js\n  const gameRef = useRef(new Chess());\n  const timeoutRef = useRef(null);\n\n  // Funzione per gestire i movimenti manuali dei pezzi\n  const onPieceDrop = (sourceSquare, targetSquare) => {\n    // Crea una copia \"fresca\" dello stato del gioco per evitare bug\n    const game = new Chess(currentPosition); \n    \n    try {\n      const move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\", // Gestisce la promozione (sempre a regina in questo caso)\n      });\n      \n      // Se la mossa non √® valida, chess.js lancia un errore o ritorna null\n      if (move === null) {\n        return false; // Comunica a react-chessboard che la mossa √® illegale\n      }\n\n      // Aggiorna lo stato con la nuova posizione FEN\n      setCurrentPosition(game.fen());\n      gameRef.current = game; // Aggiorna il riferimento principale del gioco\n      \n      return true; // Comunica che la mossa √® andata a buon fine\n    } catch (error) {\n      console.warn(\"Mossa non valida:\", error);\n      return false;\n    }\n  };\n\n  const playOpening = () => {\n    console.log(\"üîÅ Inizio animazione apertura\");\n    const moveList = moves.split(\" \").filter(Boolean);\n    const game = new Chess();\n    gameRef.current = game;\n    let i = 0;\n\n    setCurrentPosition(\"start\");\n    setIsPlaying(true);\n\n    const playNext = () => {\n      if (i >= moveList.length) {\n        setIsPlaying(false);\n        console.log(\"‚úÖ Animazione terminata\");\n        return;\n      }\n      \n      const moveResult = game.move(moveList[i]);\n      if (moveResult) {\n        setCurrentPosition(game.fen());\n        i++;\n        timeoutRef.current = setTimeout(playNext, 800);\n      } else {\n        console.error(\"‚ùå Mossa non valida nella sequenza:\", moveList[i]);\n        setIsPlaying(false);\n      }\n    };\n\n    timeoutRef.current = setTimeout(playNext, 500);\n  };\n\n  useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"2rem\" }}>\n      <Chessboard\n        boardWidth={400}\n        animationDuration={300}\n        arePiecesDraggable={true} // Ora puoi impostarlo a true\n        position={currentPosition}\n        onPieceDrop={onPieceDrop} // <-- LA PARTE FONDAMENTALE MANCANTE\n      />\n      <button\n        onClick={playOpening}\n        disabled={isPlaying}\n        style={{\n          marginTop: \"1rem\",\n          padding: \"0.5rem 1rem\",\n          fontSize: \"1rem\",\n          backgroundColor: \"#2563eb\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"8px\",\n          cursor: isPlaying ? \"not-allowed\" : \"pointer\",\n          opacity: isPlaying ? 0.6 : 1,\n        }}\n      >\n        ‚ñ∂Ô∏è Ripeti Apertura\n      </button>\n    </div>\n  );\n};\n\nexport default ChessBoard;\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,KAAK,QAAQ,UAAU;AAChC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAC/D,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMY,OAAO,GAAGb,MAAM,CAAC,IAAIE,KAAK,CAAC,CAAC,CAAC;EACnC,MAAMY,UAAU,GAAGd,MAAM,CAAC,IAAI,CAAC;;EAE/B;EACA,MAAMe,WAAW,GAAGA,CAACC,YAAY,EAAEC,YAAY,KAAK;IAClD;IACA,MAAMC,IAAI,GAAG,IAAIhB,KAAK,CAACO,eAAe,CAAC;IAEvC,IAAI;MACF,MAAMU,IAAI,GAAGD,IAAI,CAACC,IAAI,CAAC;QACrBC,IAAI,EAAEJ,YAAY;QAClBK,EAAE,EAAEJ,YAAY;QAChBK,SAAS,EAAE,GAAG,CAAE;MAClB,CAAC,CAAC;;MAEF;MACA,IAAIH,IAAI,KAAK,IAAI,EAAE;QACjB,OAAO,KAAK,CAAC,CAAC;MAChB;;MAEA;MACAT,kBAAkB,CAACQ,IAAI,CAACK,GAAG,CAAC,CAAC,CAAC;MAC9BV,OAAO,CAACW,OAAO,GAAGN,IAAI,CAAC,CAAC;;MAExB,OAAO,IAAI,CAAC,CAAC;IACf,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACC,IAAI,CAAC,mBAAmB,EAAEF,KAAK,CAAC;MACxC,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBF,OAAO,CAACG,GAAG,CAAC,+BAA+B,CAAC;IAC5C,MAAMC,QAAQ,GAAGvB,KAAK,CAACwB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;IACjD,MAAMf,IAAI,GAAG,IAAIhB,KAAK,CAAC,CAAC;IACxBW,OAAO,CAACW,OAAO,GAAGN,IAAI;IACtB,IAAIgB,CAAC,GAAG,CAAC;IAETxB,kBAAkB,CAAC,OAAO,CAAC;IAC3BE,YAAY,CAAC,IAAI,CAAC;IAElB,MAAMuB,QAAQ,GAAGA,CAAA,KAAM;MACrB,IAAID,CAAC,IAAIJ,QAAQ,CAACM,MAAM,EAAE;QACxBxB,YAAY,CAAC,KAAK,CAAC;QACnBc,OAAO,CAACG,GAAG,CAAC,wBAAwB,CAAC;QACrC;MACF;MAEA,MAAMQ,UAAU,GAAGnB,IAAI,CAACC,IAAI,CAACW,QAAQ,CAACI,CAAC,CAAC,CAAC;MACzC,IAAIG,UAAU,EAAE;QACd3B,kBAAkB,CAACQ,IAAI,CAACK,GAAG,CAAC,CAAC,CAAC;QAC9BW,CAAC,EAAE;QACHpB,UAAU,CAACU,OAAO,GAAGc,UAAU,CAACH,QAAQ,EAAE,GAAG,CAAC;MAChD,CAAC,MAAM;QACLT,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEK,QAAQ,CAACI,CAAC,CAAC,CAAC;QAChEtB,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDE,UAAU,CAACU,OAAO,GAAGc,UAAU,CAACH,QAAQ,EAAE,GAAG,CAAC;EAChD,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACd,OAAO,MAAMwC,YAAY,CAACzB,UAAU,CAACU,OAAO,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA;IAAKmC,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDtC,OAAA,CAACF,UAAU;MACTyC,UAAU,EAAE,GAAI;MAChBC,iBAAiB,EAAE,GAAI;MACvBC,kBAAkB,EAAE,IAAK,CAAC;MAAA;MAC1BC,QAAQ,EAAEtC,eAAgB;MAC1BM,WAAW,EAAEA,WAAY,CAAC;IAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACF9C,OAAA;MACE+C,OAAO,EAAExB,WAAY;MACrByB,QAAQ,EAAE1C,SAAU;MACpB6B,KAAK,EAAE;QACLE,SAAS,EAAE,MAAM;QACjBY,OAAO,EAAE,aAAa;QACtBC,QAAQ,EAAE,MAAM;QAChBC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,MAAM;QACdC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAEjD,SAAS,GAAG,aAAa,GAAG,SAAS;QAC7CkD,OAAO,EAAElD,SAAS,GAAG,GAAG,GAAG;MAC7B,CAAE;MAAAgC,QAAA,EACH;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC3C,EAAA,CAnGIF,UAAU;AAAAwD,EAAA,GAAVxD,UAAU;AAqGhB,eAAeA,UAAU;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}