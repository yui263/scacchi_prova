{"ast":null,"code":"// src/features/openings/openingsSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nimport openingsData from './openingsData';\nconst openingsSlice = createSlice({\n  name: 'openings',\n  initialState: {\n    list: openingsData,\n    selectedOpening: null\n  },\n  reducers: {\n    selectOpening: (state, action) => {\n      const openingId = parseInt(action.payload);\n      state.selectedOpening = state.list.find(opening => opening.id === openingId);\n    }\n  }\n});\nexport const {\n  selectOpening\n} = openingsSlice.actions;\nexport default openingsSlice.reducer;","map":{"version":3,"names":["createSlice","openingsData","openingsSlice","name","initialState","list","selectedOpening","reducers","selectOpening","state","action","openingId","parseInt","payload","find","opening","id","actions","reducer"],"sources":["/Users/alessiobove/Desktop/javascript_projects/The_Final_Project/chess_website/chess/src/features/openings/OpeningSlice.js"],"sourcesContent":["// src/features/openings/openingsSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nimport openingsData from './openingsData';\n\nconst openingsSlice = createSlice({\n  name: 'openings',\n  initialState: {\n    list: openingsData,\n    selectedOpening: null,\n  },\n  reducers: {\n    selectOpening: (state, action) => {\n      const openingId = parseInt(action.payload);\n      state.selectedOpening = state.list.find((opening) => opening.id === openingId);\n    },\n  },\n});\n\nexport const { selectOpening } = openingsSlice.actions;\n\nexport default openingsSlice.reducer; \n\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,MAAMC,aAAa,GAAGF,WAAW,CAAC;EAChCG,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,IAAI,EAAEJ,YAAY;IAClBK,eAAe,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAMC,SAAS,GAAGC,QAAQ,CAACF,MAAM,CAACG,OAAO,CAAC;MAC1CJ,KAAK,CAACH,eAAe,GAAGG,KAAK,CAACJ,IAAI,CAACS,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKL,SAAS,CAAC;IAChF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAc,CAAC,GAAGN,aAAa,CAACe,OAAO;AAEtD,eAAef,aAAa,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}