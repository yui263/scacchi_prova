{"ast":null,"code":"var _jsxFileName = \"/Users/alessiobove/Desktop/javascript_projects/The_Final_Project/chess_website/chess/src/pages/OpeningPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectOpening } from '../features/openings/OpeningSlice';\nimport ChessBoard from \"../components/ChessBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction cleanPGNMoves(pgnString) {\n  // Rimuove numeri di turno tipo 1., 2., 3... e eventuali simboli di punteggio (!, ?, ecc.)\n  return pgnString.replace(/\\d+\\./g, \"\") // rimuove \"1.\", \"2.\", \"3.\", ecc.\n  .replace(/[!?+#=]+/g, \"\") // rimuove simboli scacchistici (!, ?, +, #, =)\n  .replace(/\\s+/g, \" \") // rimuove spazi multipli\n  .trim(); // toglie spazi iniziali/finali\n}\nfunction OpeningPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const opening = useSelector(state => state.openings.selectedOpening);\n  useEffect(() => {\n    dispatch(selectOpening(id));\n  }, [dispatch, id]);\n  if (!opening) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Caricamento...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 22\n  }, this);\n  const cleanedMoves = cleanPGNMoves(opening.moves);\n  console.log(\"MOSSE PULITE:\", cleanedMoves);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: opening.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Mosse iniziali: \", opening.moves]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChessBoard, {\n      moves: cleanedMoves\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: opening.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(OpeningPage, \"fuuhIyPxRiTbDq8vym0kmCn7q24=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = OpeningPage;\nexport default OpeningPage;\nvar _c;\n$RefreshReg$(_c, \"OpeningPage\");","map":{"version":3,"names":["React","useParams","useDispatch","useSelector","useEffect","selectOpening","ChessBoard","jsxDEV","_jsxDEV","cleanPGNMoves","pgnString","replace","trim","OpeningPage","_s","id","dispatch","opening","state","openings","selectedOpening","children","fileName","_jsxFileName","lineNumber","columnNumber","cleanedMoves","moves","console","log","name","description","_c","$RefreshReg$"],"sources":["/Users/alessiobove/Desktop/javascript_projects/The_Final_Project/chess_website/chess/src/pages/OpeningPage.js"],"sourcesContent":["import React from \"react\";  \nimport { useParams } from \"react-router-dom\";   \nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectOpening } from '../features/openings/OpeningSlice';  \nimport ChessBoard from \"../components/ChessBoard\"; \n\n\nfunction cleanPGNMoves(pgnString) {\n  // Rimuove numeri di turno tipo 1., 2., 3... e eventuali simboli di punteggio (!, ?, ecc.)\n  return pgnString\n    .replace(/\\d+\\./g, \"\")         // rimuove \"1.\", \"2.\", \"3.\", ecc.\n    .replace(/[!?+#=]+/g, \"\")      // rimuove simboli scacchistici (!, ?, +, #, =)\n    .replace(/\\s+/g, \" \")          // rimuove spazi multipli\n    .trim();                        // toglie spazi iniziali/finali\n} \n\n\n \n\n\nfunction OpeningPage() { \nconst { id } = useParams(); \nconst dispatch = useDispatch(); \n\n \nconst opening = useSelector((state) => state.openings.selectedOpening); \n\nuseEffect(() => {\n  dispatch(selectOpening(id));\n}, [dispatch, id]);\n\nif (!opening) return <p>Caricamento...</p>; \n\nconst cleanedMoves = cleanPGNMoves(opening.moves);\nconsole.log(\"MOSSE PULITE:\", cleanedMoves); \n \n\n\n return(\n    <div>\n        <h1>{opening.name}</h1>\n      <p>Mosse iniziali: {opening.moves}</p> \n      <ChessBoard moves={cleanedMoves} />\n      <p>{opening.description}</p>\n    </div> \n\n ); \n  \n\n \n\n} \n\nexport default OpeningPage; \n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,aAAa,QAAQ,mCAAmC;AACjE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlD,SAASC,aAAaA,CAACC,SAAS,EAAE;EAChC;EACA,OAAOA,SAAS,CACbC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAS;EAAA,CAC9BA,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAM;EAAA,CAC9BA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAU;EAAA,CAC9BC,IAAI,CAAC,CAAC,CAAC,CAAwB;AACpC;AAMA,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC1B,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAG9B,MAAMe,OAAO,GAAGd,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACC,eAAe,CAAC;EAEtEhB,SAAS,CAAC,MAAM;IACdY,QAAQ,CAACX,aAAa,CAACU,EAAE,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACC,QAAQ,EAAED,EAAE,CAAC,CAAC;EAElB,IAAI,CAACE,OAAO,EAAE,oBAAOT,OAAA;IAAAa,QAAA,EAAG;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE1C,MAAMC,YAAY,GAAGjB,aAAa,CAACQ,OAAO,CAACU,KAAK,CAAC;EACjDC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,YAAY,CAAC;EAIzC,oBACGlB,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAKJ,OAAO,CAACa;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBjB,OAAA;MAAAa,QAAA,GAAG,kBAAgB,EAACJ,OAAO,CAACU,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCjB,OAAA,CAACF,UAAU;MAACqB,KAAK,EAAED;IAAa;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCjB,OAAA;MAAAa,QAAA,EAAIJ,OAAO,CAACc;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAOV;AAACX,EAAA,CA/BQD,WAAW;EAAA,QACLZ,SAAS,EACPC,WAAW,EAGZC,WAAW;AAAA;AAAA6B,EAAA,GALlBnB,WAAW;AAiCpB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}